services:
  frogbot:
    build:
      context: .
      target: development  # Target development stage in Dockerfile
    volumes:
      # Mount source code for hot reload
      - .:/app
      - nuget-cache:/root/.nuget/packages
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s # Optional: Allows time for MongoDB to initialize

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongo:
        condition: service_healthy


# Data volumes
volumes:
  mongo-data:
  nuget-cache: